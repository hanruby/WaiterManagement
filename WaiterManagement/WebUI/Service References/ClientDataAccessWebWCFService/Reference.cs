//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebUI.ClientDataAccessWebWCFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfintint", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfintint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_Item1Field;
        
        private int m_Item2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((this.m_Item1Field.Equals(value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((this.m_Item2Field.Equals(value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientDataAccessWebWCFService.IManagerDataAccessWCFService")]
    public interface IManagerDataAccessWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogIn", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogInResponse")]
        ClassLib.DataStructures.UserContext LogIn([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogIn", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogInResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogOut", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogOutResponse")]
        bool LogOut(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogOut", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogOutResponse")]
        System.Threading.Tasks.Task<bool> LogOutAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategories", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategoriesResponse")]
        ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategories(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategories", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategoriesResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItems", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemsResponse")]
        ClassLib.DataStructures.MenuItem[] GetMenuItems(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItems", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemsResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetTables", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetTablesResponse")]
        ClassLib.DataStructures.Table[] GetTables(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetTables", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetTablesResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddManager", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddManagerResponse")]
        ClassLib.DataStructures.UserContext AddManager(string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddManager", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddManagerResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddManagerAsync(string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddMenuItemCategory", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddMenuItemCategoryResponse")]
        ClassLib.DataStructures.MenuItemCategory AddMenuItemCategory(int managerId, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddMenuItemCategory", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddMenuItemCategoryResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory> AddMenuItemCategoryAsync(int managerId, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/EditMenuItemCategory", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/EditMenuItemCategoryResponse")]
        bool EditMenuItemCategory(int managerId, ClassLib.DataStructures.MenuItemCategory menuItemCategoryToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/EditMenuItemCategory", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/EditMenuItemCategoryResponse")]
        System.Threading.Tasks.Task<bool> EditMenuItemCategoryAsync(int managerId, ClassLib.DataStructures.MenuItemCategory menuItemCategoryToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveMenuItemCategory", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveMenuItemCategoryResponse")]
        bool RemoveMenuItemCategory(int managerId, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveMenuItemCategory", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveMenuItemCategoryResponse")]
        System.Threading.Tasks.Task<bool> RemoveMenuItemCategoryAsync(int managerId, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddMenuItem", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddMenuItemResponse")]
        ClassLib.DataStructures.MenuItem AddMenuItem(int managerId, string name, string description, int categoryId, ClassLib.DataStructures.Money price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddMenuItem", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddMenuItemResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem> AddMenuItemAsync(int managerId, string name, string description, int categoryId, ClassLib.DataStructures.Money price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/EditMenuItem", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/EditMenuItemResponse")]
        bool EditMenuItem(int managerId, ClassLib.DataStructures.MenuItem menuItemToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/EditMenuItem", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/EditMenuItemResponse")]
        System.Threading.Tasks.Task<bool> EditMenuItemAsync(int managerId, ClassLib.DataStructures.MenuItem menuItemToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveMenuItem", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveMenuItemResponse")]
        bool RemoveMenuItem(int managerId, int menuItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveMenuItem", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveMenuItemResponse")]
        System.Threading.Tasks.Task<bool> RemoveMenuItemAsync(int managerId, int menuItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddWaiter", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddWaiterResponse")]
        ClassLib.DataStructures.UserContext AddWaiter(int managerId, string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddWaiter", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddWaiterResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddWaiterAsync(int managerId, string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/EditWaiter", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/EditWaiterResponse")]
        bool EditWaiter(int managerId, ClassLib.DataStructures.UserContext waiterToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/EditWaiter", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/EditWaiterResponse")]
        System.Threading.Tasks.Task<bool> EditWaiterAsync(int managerId, ClassLib.DataStructures.UserContext waiterToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveWaiter", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveWaiterResponse")]
        bool RemoveWaiter(int managerId, int waiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveWaiter", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveWaiterResponse")]
        System.Threading.Tasks.Task<bool> RemoveWaiterAsync(int managerId, int waiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/GetWaiters", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/GetWaitersResponse")]
        ClassLib.DataStructures.UserContext[] GetWaiters(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/GetWaiters", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/GetWaitersResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext[]> GetWaitersAsync(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddTable", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddTableResponse")]
        ClassLib.DataStructures.Table AddTable(int managerId, int tableNumber, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/AddTable", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/AddTableResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Table> AddTableAsync(int managerId, int tableNumber, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/EditTable", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/EditTableResponse")]
        bool EditTable(int managerId, ClassLib.DataStructures.Table tableToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/EditTable", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/EditTableResponse")]
        System.Threading.Tasks.Task<bool> EditTableAsync(int managerId, ClassLib.DataStructures.Table tableToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveTable", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveTableResponse")]
        bool RemoveTable(int managerId, int tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveTable", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveTableResponse")]
        System.Threading.Tasks.Task<bool> RemoveTableAsync(int managerId, int tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/GetOrders", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/GetOrdersResponse")]
        ClassLib.DataStructures.Order[] GetOrders(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/GetOrders", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/GetOrdersResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetOrdersAsync(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveOrder", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveOrderResponse")]
        bool RemoveOrder(int managerId, int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWCFService/RemoveOrder", ReplyAction="http://tempuri.org/IManagerDataAccessWCFService/RemoveOrderResponse")]
        System.Threading.Tasks.Task<bool> RemoveOrderAsync(int managerId, int orderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerDataAccessWCFServiceChannel : WebUI.ClientDataAccessWebWCFService.IManagerDataAccessWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerDataAccessWCFServiceClient : System.ServiceModel.ClientBase<WebUI.ClientDataAccessWebWCFService.IManagerDataAccessWCFService>, WebUI.ClientDataAccessWebWCFService.IManagerDataAccessWCFService {
        
        public ManagerDataAccessWCFServiceClient() {
        }
        
        public ManagerDataAccessWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerDataAccessWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerDataAccessWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerDataAccessWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClassLib.DataStructures.UserContext LogIn(string login1, string password) {
            return base.Channel.LogIn(login1, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInAsync(string login, string password) {
            return base.Channel.LogInAsync(login, password);
        }
        
        public bool LogOut(int id) {
            return base.Channel.LogOut(id);
        }
        
        public System.Threading.Tasks.Task<bool> LogOutAsync(int id) {
            return base.Channel.LogOutAsync(id);
        }
        
        public ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategories(int userId) {
            return base.Channel.GetMenuItemCategories(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesAsync(int userId) {
            return base.Channel.GetMenuItemCategoriesAsync(userId);
        }
        
        public ClassLib.DataStructures.MenuItem[] GetMenuItems(int userId) {
            return base.Channel.GetMenuItems(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsAsync(int userId) {
            return base.Channel.GetMenuItemsAsync(userId);
        }
        
        public ClassLib.DataStructures.Table[] GetTables(int userId) {
            return base.Channel.GetTables(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesAsync(int userId) {
            return base.Channel.GetTablesAsync(userId);
        }
        
        public ClassLib.DataStructures.UserContext AddManager(string firstName, string lastName, string login, string password) {
            return base.Channel.AddManager(firstName, lastName, login, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddManagerAsync(string firstName, string lastName, string login, string password) {
            return base.Channel.AddManagerAsync(firstName, lastName, login, password);
        }
        
        public ClassLib.DataStructures.MenuItemCategory AddMenuItemCategory(int managerId, string name, string description) {
            return base.Channel.AddMenuItemCategory(managerId, name, description);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory> AddMenuItemCategoryAsync(int managerId, string name, string description) {
            return base.Channel.AddMenuItemCategoryAsync(managerId, name, description);
        }
        
        public bool EditMenuItemCategory(int managerId, ClassLib.DataStructures.MenuItemCategory menuItemCategoryToEdit) {
            return base.Channel.EditMenuItemCategory(managerId, menuItemCategoryToEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditMenuItemCategoryAsync(int managerId, ClassLib.DataStructures.MenuItemCategory menuItemCategoryToEdit) {
            return base.Channel.EditMenuItemCategoryAsync(managerId, menuItemCategoryToEdit);
        }
        
        public bool RemoveMenuItemCategory(int managerId, int categoryId) {
            return base.Channel.RemoveMenuItemCategory(managerId, categoryId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveMenuItemCategoryAsync(int managerId, int categoryId) {
            return base.Channel.RemoveMenuItemCategoryAsync(managerId, categoryId);
        }
        
        public ClassLib.DataStructures.MenuItem AddMenuItem(int managerId, string name, string description, int categoryId, ClassLib.DataStructures.Money price) {
            return base.Channel.AddMenuItem(managerId, name, description, categoryId, price);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem> AddMenuItemAsync(int managerId, string name, string description, int categoryId, ClassLib.DataStructures.Money price) {
            return base.Channel.AddMenuItemAsync(managerId, name, description, categoryId, price);
        }
        
        public bool EditMenuItem(int managerId, ClassLib.DataStructures.MenuItem menuItemToEdit) {
            return base.Channel.EditMenuItem(managerId, menuItemToEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditMenuItemAsync(int managerId, ClassLib.DataStructures.MenuItem menuItemToEdit) {
            return base.Channel.EditMenuItemAsync(managerId, menuItemToEdit);
        }
        
        public bool RemoveMenuItem(int managerId, int menuItemId) {
            return base.Channel.RemoveMenuItem(managerId, menuItemId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveMenuItemAsync(int managerId, int menuItemId) {
            return base.Channel.RemoveMenuItemAsync(managerId, menuItemId);
        }
        
        public ClassLib.DataStructures.UserContext AddWaiter(int managerId, string firstName, string lastName, string login, string password) {
            return base.Channel.AddWaiter(managerId, firstName, lastName, login, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddWaiterAsync(int managerId, string firstName, string lastName, string login, string password) {
            return base.Channel.AddWaiterAsync(managerId, firstName, lastName, login, password);
        }
        
        public bool EditWaiter(int managerId, ClassLib.DataStructures.UserContext waiterToEdit) {
            return base.Channel.EditWaiter(managerId, waiterToEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditWaiterAsync(int managerId, ClassLib.DataStructures.UserContext waiterToEdit) {
            return base.Channel.EditWaiterAsync(managerId, waiterToEdit);
        }
        
        public bool RemoveWaiter(int managerId, int waiterId) {
            return base.Channel.RemoveWaiter(managerId, waiterId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveWaiterAsync(int managerId, int waiterId) {
            return base.Channel.RemoveWaiterAsync(managerId, waiterId);
        }
        
        public ClassLib.DataStructures.UserContext[] GetWaiters(int managerId) {
            return base.Channel.GetWaiters(managerId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext[]> GetWaitersAsync(int managerId) {
            return base.Channel.GetWaitersAsync(managerId);
        }
        
        public ClassLib.DataStructures.Table AddTable(int managerId, int tableNumber, string description) {
            return base.Channel.AddTable(managerId, tableNumber, description);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Table> AddTableAsync(int managerId, int tableNumber, string description) {
            return base.Channel.AddTableAsync(managerId, tableNumber, description);
        }
        
        public bool EditTable(int managerId, ClassLib.DataStructures.Table tableToEdit) {
            return base.Channel.EditTable(managerId, tableToEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditTableAsync(int managerId, ClassLib.DataStructures.Table tableToEdit) {
            return base.Channel.EditTableAsync(managerId, tableToEdit);
        }
        
        public bool RemoveTable(int managerId, int tableId) {
            return base.Channel.RemoveTable(managerId, tableId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveTableAsync(int managerId, int tableId) {
            return base.Channel.RemoveTableAsync(managerId, tableId);
        }
        
        public ClassLib.DataStructures.Order[] GetOrders(int managerId) {
            return base.Channel.GetOrders(managerId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetOrdersAsync(int managerId) {
            return base.Channel.GetOrdersAsync(managerId);
        }
        
        public bool RemoveOrder(int managerId, int orderId) {
            return base.Channel.RemoveOrder(managerId, orderId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveOrderAsync(int managerId, int orderId) {
            return base.Channel.RemoveOrderAsync(managerId, orderId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientDataAccessWebWCFService.IManagerDataAccessWebWCFService")]
    public interface IManagerDataAccessWebWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemCategoriesWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemCategoriesWebResponse")]
        ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategoriesWeb(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemCategoriesWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemCategoriesWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesWebAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemsWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemsWebResponse")]
        ClassLib.DataStructures.MenuItem[] GetMenuItemsWeb();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemsWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemsWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsWebAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetTablesWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetTablesWebResponse")]
        ClassLib.DataStructures.Table[] GetTablesWeb(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetTablesWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetTablesWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesWebAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/LogInWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/LogInWebResponse")]
        ClassLib.DataStructures.UserContext LogInWeb(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/LogInWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/LogInWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInWebAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/LogOutWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/LogOutWebResponse")]
        bool LogOutWeb(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/LogOutWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/LogOutWebResponse")]
        System.Threading.Tasks.Task<bool> LogOutWebAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddManagerWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddManagerWebResponse")]
        ClassLib.DataStructures.UserContext AddManagerWeb(string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddManagerWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddManagerWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddManagerWebAsync(string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddMenuItemCategoryWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddMenuItemCategoryWebResponse" +
            "")]
        ClassLib.DataStructures.MenuItemCategory AddMenuItemCategoryWeb(int managerId, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddMenuItemCategoryWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddMenuItemCategoryWebResponse" +
            "")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory> AddMenuItemCategoryWebAsync(int managerId, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/EditMenuItemCategoryWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/EditMenuItemCategoryWebRespons" +
            "e")]
        bool EditMenuItemCategoryWeb(int managerId, ClassLib.DataStructures.MenuItemCategory menuItemCategoryToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/EditMenuItemCategoryWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/EditMenuItemCategoryWebRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> EditMenuItemCategoryWebAsync(int managerId, ClassLib.DataStructures.MenuItemCategory menuItemCategoryToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveMenuItemCategoryWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveMenuItemCategoryWebRespo" +
            "nse")]
        bool RemoveMenuItemCategoryWeb(int managerId, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveMenuItemCategoryWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveMenuItemCategoryWebRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> RemoveMenuItemCategoryWebAsync(int managerId, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddMenuItemWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddMenuItemWebResponse")]
        ClassLib.DataStructures.MenuItem AddMenuItemWeb(int managerId, string name, string description, int categoryId, ClassLib.DataStructures.Money price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddMenuItemWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddMenuItemWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem> AddMenuItemWebAsync(int managerId, string name, string description, int categoryId, ClassLib.DataStructures.Money price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/EditMenuItemWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/EditMenuItemWebResponse")]
        bool EditMenuItemWeb(int managerId, ClassLib.DataStructures.MenuItem menuItemToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/EditMenuItemWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/EditMenuItemWebResponse")]
        System.Threading.Tasks.Task<bool> EditMenuItemWebAsync(int managerId, ClassLib.DataStructures.MenuItem menuItemToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveMenuItemWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveMenuItemWebResponse")]
        bool RemoveMenuItemWeb(int managerId, int menuItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveMenuItemWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveMenuItemWebResponse")]
        System.Threading.Tasks.Task<bool> RemoveMenuItemWebAsync(int managerId, int menuItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddWaiterWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddWaiterWebResponse")]
        ClassLib.DataStructures.UserContext AddWaiterWeb(int managerId, string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddWaiterWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddWaiterWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddWaiterWebAsync(int managerId, string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/EditWaiterWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/EditWaiterWebResponse")]
        bool EditWaiterWeb(int managerId, ClassLib.DataStructures.UserContext waiterToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/EditWaiterWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/EditWaiterWebResponse")]
        System.Threading.Tasks.Task<bool> EditWaiterWebAsync(int managerId, ClassLib.DataStructures.UserContext waiterToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveWaiterWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveWaiterWebResponse")]
        bool RemoveWaiterWeb(int managerId, int waiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveWaiterWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveWaiterWebResponse")]
        System.Threading.Tasks.Task<bool> RemoveWaiterWebAsync(int managerId, int waiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/GetWaitersWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/GetWaitersWebResponse")]
        ClassLib.DataStructures.UserContext[] GetWaitersWeb(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/GetWaitersWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/GetWaitersWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext[]> GetWaitersWebAsync(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddTableWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddTableWebResponse")]
        ClassLib.DataStructures.Table AddTableWeb(int managerId, int tableNumber, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/AddTableWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/AddTableWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Table> AddTableWebAsync(int managerId, int tableNumber, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/EditTableWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/EditTableWebResponse")]
        bool EditTableWeb(int managerId, ClassLib.DataStructures.Table tableToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/EditTableWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/EditTableWebResponse")]
        System.Threading.Tasks.Task<bool> EditTableWebAsync(int managerId, ClassLib.DataStructures.Table tableToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveTableWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveTableWebResponse")]
        bool RemoveTableWeb(int managerId, int tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveTableWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveTableWebResponse")]
        System.Threading.Tasks.Task<bool> RemoveTableWebAsync(int managerId, int tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/GetOrdersWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/GetOrdersWebResponse")]
        ClassLib.DataStructures.Order[] GetOrdersWeb(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/GetOrdersWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/GetOrdersWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetOrdersWebAsync(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveOrderWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveOrderWebResponse")]
        bool RemoveOrderWeb(int managerId, int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveOrderWeb", ReplyAction="http://tempuri.org/IManagerDataAccessWebWCFService/RemoveOrderWebResponse")]
        System.Threading.Tasks.Task<bool> RemoveOrderWebAsync(int managerId, int orderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerDataAccessWebWCFServiceChannel : WebUI.ClientDataAccessWebWCFService.IManagerDataAccessWebWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerDataAccessWebWCFServiceClient : System.ServiceModel.ClientBase<WebUI.ClientDataAccessWebWCFService.IManagerDataAccessWebWCFService>, WebUI.ClientDataAccessWebWCFService.IManagerDataAccessWebWCFService {
        
        public ManagerDataAccessWebWCFServiceClient() {
        }
        
        public ManagerDataAccessWebWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerDataAccessWebWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerDataAccessWebWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerDataAccessWebWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategoriesWeb(int userId) {
            return base.Channel.GetMenuItemCategoriesWeb(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesWebAsync(int userId) {
            return base.Channel.GetMenuItemCategoriesWebAsync(userId);
        }
        
        public ClassLib.DataStructures.MenuItem[] GetMenuItemsWeb() {
            return base.Channel.GetMenuItemsWeb();
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsWebAsync() {
            return base.Channel.GetMenuItemsWebAsync();
        }
        
        public ClassLib.DataStructures.Table[] GetTablesWeb(int userId) {
            return base.Channel.GetTablesWeb(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesWebAsync(int userId) {
            return base.Channel.GetTablesWebAsync(userId);
        }
        
        public ClassLib.DataStructures.UserContext LogInWeb(string login, string password) {
            return base.Channel.LogInWeb(login, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInWebAsync(string login, string password) {
            return base.Channel.LogInWebAsync(login, password);
        }
        
        public bool LogOutWeb(int userId) {
            return base.Channel.LogOutWeb(userId);
        }
        
        public System.Threading.Tasks.Task<bool> LogOutWebAsync(int userId) {
            return base.Channel.LogOutWebAsync(userId);
        }
        
        public ClassLib.DataStructures.UserContext AddManagerWeb(string firstName, string lastName, string login, string password) {
            return base.Channel.AddManagerWeb(firstName, lastName, login, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddManagerWebAsync(string firstName, string lastName, string login, string password) {
            return base.Channel.AddManagerWebAsync(firstName, lastName, login, password);
        }
        
        public ClassLib.DataStructures.MenuItemCategory AddMenuItemCategoryWeb(int managerId, string name, string description) {
            return base.Channel.AddMenuItemCategoryWeb(managerId, name, description);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory> AddMenuItemCategoryWebAsync(int managerId, string name, string description) {
            return base.Channel.AddMenuItemCategoryWebAsync(managerId, name, description);
        }
        
        public bool EditMenuItemCategoryWeb(int managerId, ClassLib.DataStructures.MenuItemCategory menuItemCategoryToEdit) {
            return base.Channel.EditMenuItemCategoryWeb(managerId, menuItemCategoryToEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditMenuItemCategoryWebAsync(int managerId, ClassLib.DataStructures.MenuItemCategory menuItemCategoryToEdit) {
            return base.Channel.EditMenuItemCategoryWebAsync(managerId, menuItemCategoryToEdit);
        }
        
        public bool RemoveMenuItemCategoryWeb(int managerId, int categoryId) {
            return base.Channel.RemoveMenuItemCategoryWeb(managerId, categoryId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveMenuItemCategoryWebAsync(int managerId, int categoryId) {
            return base.Channel.RemoveMenuItemCategoryWebAsync(managerId, categoryId);
        }
        
        public ClassLib.DataStructures.MenuItem AddMenuItemWeb(int managerId, string name, string description, int categoryId, ClassLib.DataStructures.Money price) {
            return base.Channel.AddMenuItemWeb(managerId, name, description, categoryId, price);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem> AddMenuItemWebAsync(int managerId, string name, string description, int categoryId, ClassLib.DataStructures.Money price) {
            return base.Channel.AddMenuItemWebAsync(managerId, name, description, categoryId, price);
        }
        
        public bool EditMenuItemWeb(int managerId, ClassLib.DataStructures.MenuItem menuItemToEdit) {
            return base.Channel.EditMenuItemWeb(managerId, menuItemToEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditMenuItemWebAsync(int managerId, ClassLib.DataStructures.MenuItem menuItemToEdit) {
            return base.Channel.EditMenuItemWebAsync(managerId, menuItemToEdit);
        }
        
        public bool RemoveMenuItemWeb(int managerId, int menuItemId) {
            return base.Channel.RemoveMenuItemWeb(managerId, menuItemId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveMenuItemWebAsync(int managerId, int menuItemId) {
            return base.Channel.RemoveMenuItemWebAsync(managerId, menuItemId);
        }
        
        public ClassLib.DataStructures.UserContext AddWaiterWeb(int managerId, string firstName, string lastName, string login, string password) {
            return base.Channel.AddWaiterWeb(managerId, firstName, lastName, login, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddWaiterWebAsync(int managerId, string firstName, string lastName, string login, string password) {
            return base.Channel.AddWaiterWebAsync(managerId, firstName, lastName, login, password);
        }
        
        public bool EditWaiterWeb(int managerId, ClassLib.DataStructures.UserContext waiterToEdit) {
            return base.Channel.EditWaiterWeb(managerId, waiterToEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditWaiterWebAsync(int managerId, ClassLib.DataStructures.UserContext waiterToEdit) {
            return base.Channel.EditWaiterWebAsync(managerId, waiterToEdit);
        }
        
        public bool RemoveWaiterWeb(int managerId, int waiterId) {
            return base.Channel.RemoveWaiterWeb(managerId, waiterId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveWaiterWebAsync(int managerId, int waiterId) {
            return base.Channel.RemoveWaiterWebAsync(managerId, waiterId);
        }
        
        public ClassLib.DataStructures.UserContext[] GetWaitersWeb(int managerId) {
            return base.Channel.GetWaitersWeb(managerId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext[]> GetWaitersWebAsync(int managerId) {
            return base.Channel.GetWaitersWebAsync(managerId);
        }
        
        public ClassLib.DataStructures.Table AddTableWeb(int managerId, int tableNumber, string description) {
            return base.Channel.AddTableWeb(managerId, tableNumber, description);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Table> AddTableWebAsync(int managerId, int tableNumber, string description) {
            return base.Channel.AddTableWebAsync(managerId, tableNumber, description);
        }
        
        public bool EditTableWeb(int managerId, ClassLib.DataStructures.Table tableToEdit) {
            return base.Channel.EditTableWeb(managerId, tableToEdit);
        }
        
        public System.Threading.Tasks.Task<bool> EditTableWebAsync(int managerId, ClassLib.DataStructures.Table tableToEdit) {
            return base.Channel.EditTableWebAsync(managerId, tableToEdit);
        }
        
        public bool RemoveTableWeb(int managerId, int tableId) {
            return base.Channel.RemoveTableWeb(managerId, tableId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveTableWebAsync(int managerId, int tableId) {
            return base.Channel.RemoveTableWebAsync(managerId, tableId);
        }
        
        public ClassLib.DataStructures.Order[] GetOrdersWeb(int managerId) {
            return base.Channel.GetOrdersWeb(managerId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetOrdersWebAsync(int managerId) {
            return base.Channel.GetOrdersWebAsync(managerId);
        }
        
        public bool RemoveOrderWeb(int managerId, int orderId) {
            return base.Channel.RemoveOrderWeb(managerId, orderId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveOrderWebAsync(int managerId, int orderId) {
            return base.Channel.RemoveOrderWebAsync(managerId, orderId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientDataAccessWebWCFService.IClientDataAccessWebWCFService")]
    public interface IClientDataAccessWebWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemCategoriesWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemCategoriesWebResponse")]
        ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategoriesWeb(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemCategoriesWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemCategoriesWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesWebAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemsWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemsWebResponse")]
        ClassLib.DataStructures.MenuItem[] GetMenuItemsWeb();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemsWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetMenuItemsWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsWebAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetTablesWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetTablesWebResponse")]
        ClassLib.DataStructures.Table[] GetTablesWeb(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/GetTablesWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/GetTablesWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesWebAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/LogInWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/LogInWebResponse")]
        ClassLib.DataStructures.UserContext LogInWeb(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/LogInWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/LogInWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInWebAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/LogOutWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/LogOutWebResponse")]
        bool LogOutWeb(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWebWCFService/LogOutWeb", ReplyAction="http://tempuri.org/IBaseDataAccessWebWCFService/LogOutWebResponse")]
        System.Threading.Tasks.Task<bool> LogOutWebAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWebWCFService/AddClientWeb", ReplyAction="http://tempuri.org/IClientDataAccessWebWCFService/AddClientWebResponse")]
        ClassLib.DataStructures.UserContext AddClientWeb(string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWebWCFService/AddClientWeb", ReplyAction="http://tempuri.org/IClientDataAccessWebWCFService/AddClientWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddClientWebAsync(string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWebWCFService/AddOrderWeb", ReplyAction="http://tempuri.org/IClientDataAccessWebWCFService/AddOrderWebResponse")]
        ClassLib.DataStructures.Order AddOrderWeb(int userId, System.DateTime orderTime, WebUI.ClientDataAccessWebWCFService.TupleOfintint[] menuItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWebWCFService/AddOrderWeb", ReplyAction="http://tempuri.org/IClientDataAccessWebWCFService/AddOrderWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Order> AddOrderWebAsync(int userId, System.DateTime orderTime, WebUI.ClientDataAccessWebWCFService.TupleOfintint[] menuItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWebWCFService/GetOrdersClientWeb", ReplyAction="http://tempuri.org/IClientDataAccessWebWCFService/GetOrdersClientWebResponse")]
        ClassLib.DataStructures.Order[] GetOrdersClientWeb(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWebWCFService/GetOrdersClientWeb", ReplyAction="http://tempuri.org/IClientDataAccessWebWCFService/GetOrdersClientWebResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetOrdersClientWebAsync(int clientId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientDataAccessWebWCFServiceChannel : WebUI.ClientDataAccessWebWCFService.IClientDataAccessWebWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientDataAccessWebWCFServiceClient : System.ServiceModel.ClientBase<WebUI.ClientDataAccessWebWCFService.IClientDataAccessWebWCFService>, WebUI.ClientDataAccessWebWCFService.IClientDataAccessWebWCFService {
        
        public ClientDataAccessWebWCFServiceClient() {
        }
        
        public ClientDataAccessWebWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientDataAccessWebWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientDataAccessWebWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientDataAccessWebWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategoriesWeb(int userId) {
            return base.Channel.GetMenuItemCategoriesWeb(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesWebAsync(int userId) {
            return base.Channel.GetMenuItemCategoriesWebAsync(userId);
        }
        
        public ClassLib.DataStructures.MenuItem[] GetMenuItemsWeb() {
            return base.Channel.GetMenuItemsWeb();
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsWebAsync() {
            return base.Channel.GetMenuItemsWebAsync();
        }
        
        public ClassLib.DataStructures.Table[] GetTablesWeb(int userId) {
            return base.Channel.GetTablesWeb(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesWebAsync(int userId) {
            return base.Channel.GetTablesWebAsync(userId);
        }
        
        public ClassLib.DataStructures.UserContext LogInWeb(string login, string password) {
            return base.Channel.LogInWeb(login, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInWebAsync(string login, string password) {
            return base.Channel.LogInWebAsync(login, password);
        }
        
        public bool LogOutWeb(int userId) {
            return base.Channel.LogOutWeb(userId);
        }
        
        public System.Threading.Tasks.Task<bool> LogOutWebAsync(int userId) {
            return base.Channel.LogOutWebAsync(userId);
        }
        
        public ClassLib.DataStructures.UserContext AddClientWeb(string firstName, string lastName, string login, string password) {
            return base.Channel.AddClientWeb(firstName, lastName, login, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddClientWebAsync(string firstName, string lastName, string login, string password) {
            return base.Channel.AddClientWebAsync(firstName, lastName, login, password);
        }
        
        public ClassLib.DataStructures.Order AddOrderWeb(int userId, System.DateTime orderTime, WebUI.ClientDataAccessWebWCFService.TupleOfintint[] menuItems) {
            return base.Channel.AddOrderWeb(userId, orderTime, menuItems);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Order> AddOrderWebAsync(int userId, System.DateTime orderTime, WebUI.ClientDataAccessWebWCFService.TupleOfintint[] menuItems) {
            return base.Channel.AddOrderWebAsync(userId, orderTime, menuItems);
        }
        
        public ClassLib.DataStructures.Order[] GetOrdersClientWeb(int clientId) {
            return base.Channel.GetOrdersClientWeb(clientId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetOrdersClientWebAsync(int clientId) {
            return base.Channel.GetOrdersClientWebAsync(clientId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientDataAccessWebWCFService.IWaiterDataAccessWCFService", CallbackContract=typeof(WebUI.ClientDataAccessWebWCFService.IWaiterDataAccessWCFServiceCallback))]
    public interface IWaiterDataAccessWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogIn", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogInResponse")]
        ClassLib.DataStructures.UserContext LogIn([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogIn", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogInResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogOut", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogOutResponse")]
        bool LogOut(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogOut", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogOutResponse")]
        System.Threading.Tasks.Task<bool> LogOutAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategories", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategoriesResponse")]
        ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategories(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategories", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategoriesResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItems", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemsResponse")]
        ClassLib.DataStructures.MenuItem[] GetMenuItems(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItems", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemsResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetTables", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetTablesResponse")]
        ClassLib.DataStructures.Table[] GetTables(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetTables", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetTablesResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/GetAllPastOrders", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/GetAllPastOrdersResponse")]
        ClassLib.DataStructures.Order[] GetAllPastOrders(int waiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/GetAllPastOrders", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/GetAllPastOrdersResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetAllPastOrdersAsync(int waiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/GetPastOrders", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/GetPastOrdersResponse")]
        ClassLib.DataStructures.Order[] GetPastOrders(int waiterId, int firstIndex, int lastIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/GetPastOrders", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/GetPastOrdersResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetPastOrdersAsync(int waiterId, int firstIndex, int lastIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/GetActiveOrders", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/GetActiveOrdersResponse")]
        ClassLib.DataStructures.Order[] GetActiveOrders(int waiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/GetActiveOrders", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/GetActiveOrdersResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetActiveOrdersAsync(int waiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/SetOrderState", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/SetOrderStateResponse")]
        bool SetOrderState(int waiterId, int orderId, ClassLib.DataStructures.OrderState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/SetOrderState", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/SetOrderStateResponse")]
        System.Threading.Tasks.Task<bool> SetOrderStateAsync(int waiterId, int orderId, ClassLib.DataStructures.OrderState state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWaiterDataAccessWCFServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/AcceptNewOrder", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/AcceptNewOrderResponse")]
        bool AcceptNewOrder(ClassLib.DataStructures.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaiterDataAccessWCFService/ConfirmUserPaid", ReplyAction="http://tempuri.org/IWaiterDataAccessWCFService/ConfirmUserPaidResponse")]
        bool ConfirmUserPaid(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWaiterDataAccessWCFServiceChannel : WebUI.ClientDataAccessWebWCFService.IWaiterDataAccessWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WaiterDataAccessWCFServiceClient : System.ServiceModel.DuplexClientBase<WebUI.ClientDataAccessWebWCFService.IWaiterDataAccessWCFService>, WebUI.ClientDataAccessWebWCFService.IWaiterDataAccessWCFService {
        
        public WaiterDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WaiterDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WaiterDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WaiterDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WaiterDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ClassLib.DataStructures.UserContext LogIn(string login1, string password) {
            return base.Channel.LogIn(login1, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInAsync(string login, string password) {
            return base.Channel.LogInAsync(login, password);
        }
        
        public bool LogOut(int id) {
            return base.Channel.LogOut(id);
        }
        
        public System.Threading.Tasks.Task<bool> LogOutAsync(int id) {
            return base.Channel.LogOutAsync(id);
        }
        
        public ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategories(int userId) {
            return base.Channel.GetMenuItemCategories(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesAsync(int userId) {
            return base.Channel.GetMenuItemCategoriesAsync(userId);
        }
        
        public ClassLib.DataStructures.MenuItem[] GetMenuItems(int userId) {
            return base.Channel.GetMenuItems(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsAsync(int userId) {
            return base.Channel.GetMenuItemsAsync(userId);
        }
        
        public ClassLib.DataStructures.Table[] GetTables(int userId) {
            return base.Channel.GetTables(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesAsync(int userId) {
            return base.Channel.GetTablesAsync(userId);
        }
        
        public ClassLib.DataStructures.Order[] GetAllPastOrders(int waiterId) {
            return base.Channel.GetAllPastOrders(waiterId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetAllPastOrdersAsync(int waiterId) {
            return base.Channel.GetAllPastOrdersAsync(waiterId);
        }
        
        public ClassLib.DataStructures.Order[] GetPastOrders(int waiterId, int firstIndex, int lastIndex) {
            return base.Channel.GetPastOrders(waiterId, firstIndex, lastIndex);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetPastOrdersAsync(int waiterId, int firstIndex, int lastIndex) {
            return base.Channel.GetPastOrdersAsync(waiterId, firstIndex, lastIndex);
        }
        
        public ClassLib.DataStructures.Order[] GetActiveOrders(int waiterId) {
            return base.Channel.GetActiveOrders(waiterId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Order[]> GetActiveOrdersAsync(int waiterId) {
            return base.Channel.GetActiveOrdersAsync(waiterId);
        }
        
        public bool SetOrderState(int waiterId, int orderId, ClassLib.DataStructures.OrderState state) {
            return base.Channel.SetOrderState(waiterId, orderId, state);
        }
        
        public System.Threading.Tasks.Task<bool> SetOrderStateAsync(int waiterId, int orderId, ClassLib.DataStructures.OrderState state) {
            return base.Channel.SetOrderStateAsync(waiterId, orderId, state);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientDataAccessWebWCFService.IClientDataAccessWCFService", CallbackContract=typeof(WebUI.ClientDataAccessWebWCFService.IClientDataAccessWCFServiceCallback))]
    public interface IClientDataAccessWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogIn", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogInResponse")]
        ClassLib.DataStructures.UserContext LogIn([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogIn", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogInResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogOut", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogOutResponse")]
        bool LogOut(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/LogOut", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/LogOutResponse")]
        System.Threading.Tasks.Task<bool> LogOutAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategories", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategoriesResponse")]
        ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategories(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategories", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemCategoriesResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItems", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemsResponse")]
        ClassLib.DataStructures.MenuItem[] GetMenuItems(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItems", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetMenuItemsResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetTables", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetTablesResponse")]
        ClassLib.DataStructures.Table[] GetTables(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseDataAccessWCFService/GetTables", ReplyAction="http://tempuri.org/IBaseDataAccessWCFService/GetTablesResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/AddClient", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/AddClientResponse")]
        ClassLib.DataStructures.UserContext AddClient(string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/AddClient", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/AddClientResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddClientAsync(string firstName, string lastName, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/AddOrder", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/AddOrderResponse")]
        ClassLib.DataStructures.Order AddOrder(int userId, int tableId, WebUI.ClientDataAccessWebWCFService.TupleOfintint[] menuItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/AddOrder", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/AddOrderResponse")]
        System.Threading.Tasks.Task<ClassLib.DataStructures.Order> AddOrderAsync(int userId, int tableId, WebUI.ClientDataAccessWebWCFService.TupleOfintint[] menuItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/PayForOrder", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/PayForOrderResponse")]
        bool PayForOrder(int userId, int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/PayForOrder", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/PayForOrderResponse")]
        System.Threading.Tasks.Task<bool> PayForOrderAsync(int userId, int orderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientDataAccessWCFServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/NotifyOrderAccepted", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/NotifyOrderAcceptedResponse")]
        void NotifyOrderAccepted(int orderId, ClassLib.DataStructures.UserContext waiter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/NotifyOrderOnHold", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/NotifyOrderOnHoldResponse")]
        void NotifyOrderOnHold(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientDataAccessWCFService/NotifyOrderAwaitingDelivery", ReplyAction="http://tempuri.org/IClientDataAccessWCFService/NotifyOrderAwaitingDeliveryRespons" +
            "e")]
        void NotifyOrderAwaitingDelivery(int oderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientDataAccessWCFServiceChannel : WebUI.ClientDataAccessWebWCFService.IClientDataAccessWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientDataAccessWCFServiceClient : System.ServiceModel.DuplexClientBase<WebUI.ClientDataAccessWebWCFService.IClientDataAccessWCFService>, WebUI.ClientDataAccessWebWCFService.IClientDataAccessWCFService {
        
        public ClientDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ClientDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ClientDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ClientDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ClientDataAccessWCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ClassLib.DataStructures.UserContext LogIn(string login1, string password) {
            return base.Channel.LogIn(login1, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> LogInAsync(string login, string password) {
            return base.Channel.LogInAsync(login, password);
        }
        
        public bool LogOut(int id) {
            return base.Channel.LogOut(id);
        }
        
        public System.Threading.Tasks.Task<bool> LogOutAsync(int id) {
            return base.Channel.LogOutAsync(id);
        }
        
        public ClassLib.DataStructures.MenuItemCategory[] GetMenuItemCategories(int userId) {
            return base.Channel.GetMenuItemCategories(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItemCategory[]> GetMenuItemCategoriesAsync(int userId) {
            return base.Channel.GetMenuItemCategoriesAsync(userId);
        }
        
        public ClassLib.DataStructures.MenuItem[] GetMenuItems(int userId) {
            return base.Channel.GetMenuItems(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.MenuItem[]> GetMenuItemsAsync(int userId) {
            return base.Channel.GetMenuItemsAsync(userId);
        }
        
        public ClassLib.DataStructures.Table[] GetTables(int userId) {
            return base.Channel.GetTables(userId);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Table[]> GetTablesAsync(int userId) {
            return base.Channel.GetTablesAsync(userId);
        }
        
        public ClassLib.DataStructures.UserContext AddClient(string firstName, string lastName, string login, string password) {
            return base.Channel.AddClient(firstName, lastName, login, password);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.UserContext> AddClientAsync(string firstName, string lastName, string login, string password) {
            return base.Channel.AddClientAsync(firstName, lastName, login, password);
        }
        
        public ClassLib.DataStructures.Order AddOrder(int userId, int tableId, WebUI.ClientDataAccessWebWCFService.TupleOfintint[] menuItems) {
            return base.Channel.AddOrder(userId, tableId, menuItems);
        }
        
        public System.Threading.Tasks.Task<ClassLib.DataStructures.Order> AddOrderAsync(int userId, int tableId, WebUI.ClientDataAccessWebWCFService.TupleOfintint[] menuItems) {
            return base.Channel.AddOrderAsync(userId, tableId, menuItems);
        }
        
        public bool PayForOrder(int userId, int orderId) {
            return base.Channel.PayForOrder(userId, orderId);
        }
        
        public System.Threading.Tasks.Task<bool> PayForOrderAsync(int userId, int orderId) {
            return base.Channel.PayForOrderAsync(userId, orderId);
        }
    }
}
